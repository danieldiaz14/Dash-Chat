{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport chats from '../apis/chats';\nimport { SIGN_IN, SIGN_OUT, CREATE_CHAT, FETCH_CHATS, FETCH_CHAT, DELETE_CHAT, EDIT_CHAT } from './types';\nexport var signIn = function signIn(userInfo) {\n  return {\n    type: SIGN_IN,\n    payload: userInfo\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createChat = function createChat(message) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return chats.post('/chats', _objectSpread({}, message));\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_CHAT,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchChats = function fetchChats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return chats.get('/chats');\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_CHATS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/danieldiaz/Desktop/Dash-Chat/client/src/actions/index.js"],"names":["chats","SIGN_IN","SIGN_OUT","CREATE_CHAT","FETCH_CHATS","FETCH_CHAT","DELETE_CHAT","EDIT_CHAT","signIn","userInfo","type","payload","signOut","createChat","message","dispatch","post","response","data","fetchChats","get"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,UALJ,EAMIC,WANJ,EAOIC,SAPJ,QAQO,SARP;AAUA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,QAAQ,EAAI;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACVf,KAAK,CAACgB,IAAN,CAAW,QAAX,oBAAyBF,OAAzB,EADU;;AAAA;AAC3BG,gBAAAA,QAD2B;AAEjCF,gBAAAA,QAAQ,CAAC;AAACL,kBAAAA,IAAI,EAAEP,WAAP;AAAoBQ,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAtC,iBAAD,CAAR;;AAFiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAKP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAOJ,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLf,KAAK,CAACoB,GAAN,CAAU,QAAV,CADK;;AAAA;AACtBH,gBAAAA,QADsB;AAE5BF,gBAAAA,QAAQ,CAAC;AAACL,kBAAAA,IAAI,EAAEN,WAAP;AAAoBO,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAAtC,iBAAD,CAAR;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import chats from '../apis/chats';\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_CHAT,\n    FETCH_CHATS,\n    FETCH_CHAT,\n    DELETE_CHAT,\n    EDIT_CHAT\n} from './types';\n\nexport const signIn = userInfo => {\n    return {\n        type: SIGN_IN,\n        payload: userInfo\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createChat = message => async (dispatch) => {\n    const response = await chats.post('/chats', {...message});\n    dispatch({type: CREATE_CHAT, payload: response.data});\n};\n\nexport const fetchChats = () => async (dispatch) => {\n    const response = await chats.get('/chats');\n    dispatch({type: FETCH_CHATS, payload: response.data});\n}"]},"metadata":{},"sourceType":"module"}