{"ast":null,"code":"import _classCallCheck from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danieldiaz/Desktop/Dash-Chat/client/src/components/Chat/MessageBox.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createChat } from '../../actions/index';\n\nvar MessageBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageBox, _React$Component);\n\n  function MessageBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MessageBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MessageBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: ''\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        value: e.target.value\n      });\n    };\n\n    _this.sendMessage = function () {\n      var currentUser = _this.props.currentUser;\n\n      if (_this.state.value.length > 1) {}\n\n      ;\n    };\n\n    _this.renderContent = function () {\n      var currentUser = _this.props.currentUser;\n\n      if (!currentUser.isSignedIn) {\n        return React.createElement(\"textarea\", {\n          placeholder: \"Please sign in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          value: _this.state.value,\n          onChange: _this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          onClick: _this.sendMessage,\n          className: \"ui button labeled submit icon button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"comment icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), \" Send\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MessageBox, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"ui reply form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.renderContent()));\n    }\n  }]);\n\n  return MessageBox;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.auth,\n    messages: state.chat\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createChat: createChat\n})(MessageBox);","map":{"version":3,"sources":["/Users/danieldiaz/Desktop/Dash-Chat/client/src/components/Chat/MessageBox.js"],"names":["React","connect","createChat","MessageBox","state","value","handleChange","e","setState","target","sendMessage","currentUser","props","length","renderContent","isSignedIn","Component","mapStateToProps","auth","messages","chat"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAACC,MAAAA,KAAK,EAAE;AAAR,K;;UACRC,Y,GAAe,UAACC,CAAD,EAAO;AAClB,YAAKC,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEE,CAAC,CAACE,MAAF,CAASJ;AAAjB,OAAd;AACH,K;;UAEDK,W,GAAc,YAAM;AAAA,UACTC,WADS,GACM,MAAKC,KADX,CACTD,WADS;;AAEhB,UAAI,MAAKP,KAAL,CAAWC,KAAX,CAAiBQ,MAAjB,GAA0B,CAA9B,EAAiC,CAEhC;;AAAA;AACJ,K;;UACDC,a,GAAgB,YAAM;AAAA,UACXH,WADW,GACI,MAAKC,KADT,CACXD,WADW;;AAElB,UAAI,CAACA,WAAW,CAACI,UAAjB,EAA6B;AACzB,eACI;AAAU,UAAA,WAAW,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD,MAIO;AACH,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAU,UAAA,KAAK,EAAE,MAAKX,KAAL,CAAWC,KAA5B;AAAmC,UAAA,QAAQ,EAAE,MAAKC,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,OAAO,EAAE,MAAKI,WAAnB;AAAgC,UAAA,SAAS,EAAC,sCAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,UAFJ,CADJ;AAQH;AACJ,K;;;;;;;6BAEQ;AACL,aACI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKI,aAAL,EADL,CADJ,CADJ;AAOH;;;;EAtCoBd,KAAK,CAACgB,S;;AA0C/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAb,KAAK,EAAI;AAC7B,SAAO;AACHO,IAAAA,WAAW,EAAEP,KAAK,CAACc,IADhB;AAEHC,IAAAA,QAAQ,EAAEf,KAAK,CAACgB;AAFb,GAAP;AAIH,CALD;;AAOA,eAAenB,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA,UAAU,EAAVA;AAAD,CAAlB,CAAP,CAAuCC,UAAvC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { createChat } from '../../actions/index';\n\nclass MessageBox extends React.Component{\n    state = {value: ''}\n    handleChange = (e) => {\n        this.setState({value: e.target.value});\n    };\n\n    sendMessage = () => {\n        const {currentUser} = this.props;\n        if (this.state.value.length > 1) {\n\n        };\n    };\n    renderContent = () => {\n        const {currentUser} = this.props;\n        if (!currentUser.isSignedIn) {\n            return (\n                <textarea placeholder=\"Please sign in\"/>\n            )\n        } else {\n            return (\n                <div>\n                    <textarea value={this.state.value} onChange={this.handleChange}/>\n                    <div onClick={this.sendMessage} className=\"ui button labeled submit icon button\">\n                        <i className=\"comment icon\"/> Send\n                    </div>\n                </div>\n            )\n        }\n    };\n\n    render() {\n        return (\n            <form  className=\"ui reply form\">\n                <div className=\"field\">\n                    {this.renderContent()}\n                </div>\n            </form>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.auth,\n        messages: state.chat\n    }\n}\n\nexport default connect(mapStateToProps, {createChat})(MessageBox);"]},"metadata":{},"sourceType":"module"}