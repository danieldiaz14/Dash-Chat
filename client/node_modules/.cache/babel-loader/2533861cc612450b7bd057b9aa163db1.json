{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/danieldiaz/Desktop/Dash-Chat/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport chats from '../apis/chats';\nimport { SIGN_IN, SIGN_OUT, CREATE_CHAT, FETCH_CHATS, FETCH_CHAT, DELETE_CHAT, EDIT_CHAT } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createChat = function createChat(message) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return chats.post('/chats', _objectSpread({}, message, {\n                  userId: userId\n                }));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_CHAT,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/danieldiaz/Desktop/Dash-Chat/client/src/actions/index.js"],"names":["chats","SIGN_IN","SIGN_OUT","CREATE_CHAT","FETCH_CHATS","FETCH_CHAT","DELETE_CHAT","EDIT_CHAT","signIn","userId","type","payload","signOut","createChat","message","dispatch","getState","auth","post","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,UALJ,EAMIC,WANJ,EAOIC,SAPJ,QAQO,SARP;AAUA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BP,gBAAAA,MAD0B,GAChBO,QAAQ,GAAGC,IADK,CAC1BR,MAD0B;AAAA;AAAA,uBAEVT,KAAK,CAACkB,IAAN,CAAW,QAAX,oBAAyBJ,OAAzB;AAAkCL,kBAAAA,MAAM,EAANA;AAAlC,mBAFU;;AAAA;AAE3BU,gBAAAA,QAF2B;AAGjCJ,gBAAAA,QAAQ,CAAC;AAACL,kBAAAA,IAAI,EAAEP,WAAP;AAAoBQ,kBAAAA,OAAO,EAAEQ,QAAQ,CAACC;AAAtC,iBAAD,CAAR;;AAHiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import chats from '../apis/chats';\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_CHAT,\n    FETCH_CHATS,\n    FETCH_CHAT,\n    DELETE_CHAT,\n    EDIT_CHAT\n} from './types';\n\nexport const signIn = userId => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createChat = message => async(dispatch, getState) => {\n    const {userId} = getState().auth;\n    const response = await chats.post('/chats', {...message, userId});\n    dispatch({type: CREATE_CHAT, payload: response.data});\n};"]},"metadata":{},"sourceType":"module"}